<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardDao">

	<!-- 서치 -->
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND title LIKE ('%' || #{keyword} || '%')</if>
			<if test="searchType == 'c'.toString()">AND content LIKE ('%' || #{keyword} || '%')</if>
			<if test="searchType == 'tc'.toString()">AND (title LIKE ('%' || #{keyword} || '%') or content LIKE ('%' || #{keyword} || '%'))</if>
		</if>
	</sql>

	<!-- 카운트페이지(카테고리별) -->
<!-- <select id="countPage" resultType="int" parameterType="com.homepage.taempage.common.Criteria">
	<![CDATA[
		SELECT COUNT(b.boardNo) 
		FROM (
    		select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName
		from BOARD b
			inner join CATEGORY c
			on b.cateNo = c.cateNo
		where b.cateNo = #{cateNo}     
    	)b
    	WHERE b.boardNo > 0
    ]]>
	</select> -->

<!-- <select id="countPage" resultType="int">
		SELECT COUNT(boardNo)
		FROM BOARD
		WHERE boardNo > 0
	</select> -->
	
	<select id="countPage" resultType="int">
		<![CDATA[
		select COUNT(boardNo) from
		(select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName
				from BOARD b
					inner join CATEGORY c
					on b.cateNo = c.cateNo
				where b.cateNo=#{cateNo}
					)
				WHERE boardNo > 0
		]]>
	</select>
	
	
	
	<!-- 보드 리스트(카테고리별) -->
<!-- <select id="boardList" resultType="BoardVo">
		select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName
		from BOARD b
			inner join CATEGORY c
			on b.cateNo = c.cateNo
		where b.cateNo=#{cateNo}
	</select> -->
	
<!-- <select id="boardList" resultType="BoardVo" parameterType="com.homepage.taempage.common.Criteria">
		select a.* from 
	  		(select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName
				from BOARD b
					inner join CATEGORY c
					on b.cateNo = c.cateNo
				where b.cateNo=#{cateNo}
					)a
	  		ORDER BY boardNo DESC
	</select>  -->
	
<!--	<select id="boardList" resultType="BoardVo" parameterType="com.homepage.taempage.common.Criteria">
		select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName
				from BOARD b
					inner join CATEGORY c
					on b.cateNo = c.cateNo
				where b.cateNo=#{cateNo} 
				ORDER BY boardNo DESC
	</select>  -->
	
	<select id="boardList" resultType="BoardVo" parameterType="com.homepage.taempage.common.Criteria">
		SELECT a.*
		FROM (
    		select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName, ROW_NUMBER() OVER(ORDER BY boardNo DESC) AS RNUM
				from BOARD b
					inner join CATEGORY c
					on b.cateNo = c.cateNo
				where 1=1
			 AND b.cateNo=#{cateNo}			    
    	)a  	
    	<!--WHERE RNUM BETWEEN #{rowStart} and #{rowEnd}-->
    	WHERE RNUM BETWEEN 1 and 10
		ORDER BY boardNo DESC
	</select>
	
	<!-- 보드 상세보기 (카테고리 조인) -->
	<select id="boardView" resultType="BoardVo">
		select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, b.cateNo, c.cateName
		from BOARD b
			inner join CATEGORY c
			on b.cateNo = c.cateNo
		where b.boardNo=#{boardNo}
	</select>
	
	<!-- 보드 입력 -->
<!-- <insert id="write" parameterType="BoardVo">
		insert into board (boardNo, cateNo, open, writer, title, content, fileName)
		values (boardNo.nextval, #{cateNo}, #{open}, #{writer}, #{title}, #{content}, #{fileName})
	</insert> -->
	
	<!-- 카테고리 -->
	<select id="category" resultType="com.homepage.taempage.domain.CategoryVo">
		select cateNo, cateName, tier from CATEGORY
	</select>
	
	<insert id="write" parameterType="BoardVo">
		insert into BOARD ("BOARDNO", "CATENO", "OPEN", "TITLE", "CONTENT")
		values (BOARDNO.nextval, #{cateNo}, #{open}, #{title}, #{content})
	</insert>
	
	<!-- 보드 수정 -->
	<update id="update" parameterType="BoardVo">
		update board set
		cateNo=#{cateNo},
		open=#{open},
		title=#{title},
		content=#{content}
		where boardNo=#{boardNo}
	</update>
	
	<!-- 보드 삭제 -->
	<delete id="delete" parameterType="int">
		delete from board where boardNo=#{boardNo}
	</delete>
	
	
	<!-- reply -->
	<!-- 멤버체크 -->
	<select id="memChk" resultType="int">
		select memNo from REPLY where replyNo=#{replyNo}
	</select>
	
	<!-- 댓글입력 -->
	<insert id="reply" parameterType="com.homepage.taempage.domain.ReplyVo">
		insert into REPLY ("REPLYNO", "MEMNO", "BOARDNO", "REPLY")
		values (REPLYNO.nextval, #{memNo}, #{boardNo}, #{reply})
	</insert>
	
	<!-- 댓글리스트 -->
	<select id="replyList" resultType="com.homepage.taempage.domain.ReplyVo">
		select r.replyNo, r.memNo, r.boardNo, r.reply, r.replyDate, m.memId
		from REPLY r
			inner join MEMBER m
				on r.MEMNO=m.MEMNO
			where r.BOARDNO=#{boardNo}
	</select>
	
	<!-- 댓글수정 -->
	<update id="replyUpdate">
		update REPLY set
		reply=#{reply}
		where replyNo=#{replyNo} AND memNo=#{memNo}
	</update>
	
	<!-- 댓글삭제 -->
	<delete id="replyDelete">
		delete from REPLY where replyNo=#{replyNo} AND memNo=#{memNo}
	</delete>
	
	<!-- admin-page -->
	<!-- list -->
	<select id="adminBoardList" resultType="BoardVo">
		select b.boardNo, b.open, b.writer, b.title, b.content, b.boardDate, c.cateNo, c.cateName
		from BOARD b
			inner join CATEGORY c
			on b.cateNo = c.cateNo
		where b.cateNo=#{cateNo}
	</select>
	
	
</mapper>